@use "./_constants.scss" as *;
@use "./_mixins.scss" as *;
@use "sass:color";

$size-palette-color-minimum: 2rem;
$color-ruler-tick: color.mix($color-section-gray-border, $color-section-gray, 50%);

@mixin box-corners($color, $thickness) {
  background-position:
    calc(-1 * $thickness) 0,
    0 calc(-1 * $thickness),
    calc(100% + $thickness) 0,
    0 calc(100% + $thickness);
  background-size:
    calc($thickness * 2) 100%,
    100% calc($thickness * 2),
    calc($thickness * 2) 100%,
    100% calc($thickness * 2);
  background-repeat: no-repeat;

  background-image: linear-gradient(0deg, $color, $color 25%, transparent 25%, transparent 75%, $color 75%),
    linear-gradient(90deg, $color, $color 25%, transparent 25%, transparent 75%, $color 75%),
    linear-gradient(0deg, $color, $color 25%, transparent 25%, transparent 75%, $color 75%),
    linear-gradient(90deg, $color, $color 25%, transparent 25%, transparent 75%, $color 75%);
}

input[type="text"].palette-rename {
  font-size: 1.8rem;
  max-width: 32rem;
  margin: -0.4rem -0.4rem 0.8rem -0.4rem;
}

.palette-ruler-row {
  display: flex;
  flex-direction: row;
  margin: -0.4rem ($size-scrollbar-recess + $size-scrollbar-recess-spacing) 0.2rem (2.4rem + $size-widget-outline);
  overflow: hidden;
}

.palette-ruler-cel {
  color: $color-text-gray;
  font-size: 1.3rem;
  text-align: center;
  align-self: stretch;
  align-content: center;
  overflow: hidden;
  border-radius: 0.3rem;
  z-index: 2;

  &.palette-ruler-active {
    color: $color-text-selected;
    background-color: $color-selected;
    font-weight: bold;
  }
}

.palette-ruler-row-cel {
  min-width: $size-palette-color-minimum;
  padding: 0.4rem 0 0.2rem 0;
  flex: 1;
  position: relative;

  &:not(.palette-ruler-active):after {
    @include layered-pseudo-element(0.8rem, 0, 0.3rem, 0);

    border-left: 0.05rem solid $color-ruler-tick;
    border-right: 0.05rem solid $color-ruler-tick;
  }
}

.palette-ruler-column-cel {
  width: 2.6rem;
  min-width: 2.6rem;
  margin-right: 0.2rem + $size-widget-outline;

  position: relative;

  &:not(.palette-ruler-active):after {
    @include layered-pseudo-element(0, 0.3rem, 0, 1.6rem - $size-widget-outline);

    border-top: 0.05rem solid $color-ruler-tick;
    border-bottom: 0.05rem solid $color-ruler-tick;
  }
}

.palette {
  display: flex;
  flex-direction: column;
  flex: 1 1 0;
  margin: -0.4rem;
  overflow: hidden;

  @media (max-height: $size-portrait-scroll-min) {
    flex: 1;
  }

  .palette-scroll {
    min-width: (
      ($size-palette-color-minimum * 16) + $size-widget-outline * 2 + $size-scrollbar-recess +
        $size-scrollbar-recess-spacing
    );
    display: flex;
    flex-direction: column;
    overflow-x: visible;
    overflow-y: hidden;
    position: relative;
    padding: 0.5rem;
    outline: none;

    &.palette-scroll-ruler {
      padding-left: 0;
    }

    $right-offset: 0.4rem + $size-scrollbar-recess + $size-scrollbar-recess-spacing - $size-widget-outline;

    &:after {
      @include layered-pseudo-element(0.4rem, $right-offset, 0.4rem, 0.4rem);
      pointer-events: none;

      border: $size-widget-outline solid $color-section-border;
      border-radius: $size-button-radius;
      outline: $color-section-gray ($size-button-radius * 0.8 - ($size-widget-outline * 2)) solid;
    }

    &.palette-scroll-ruler:after {
      @include layered-pseudo-element(0.4rem, $right-offset, 0.4rem, 2.7rem + $size-widget-outline);
    }

    &:focus-visible:before {
      @include layered-pseudo-element(0.4rem, 0.4rem, 0.4rem, 0.4rem);
      pointer-events: none;
      z-index: 2;

      border-radius: $size-button-radius;
      outline: $color-widget-accent 0.2rem solid;
      outline-offset: 0.1rem;
    }

    &.palette-scroll-ruler:focus-visible:before {
      @include layered-pseudo-element(0.4rem, 0.4rem, 0.4rem, 2.7rem + $size-widget-outline);
    }

    @include scrollbar-with-recess();
  }

  &.cel-picker-active {
    cursor: crosshair;
  }
}

.palette-row {
  display: flex;
  flex-direction: row;
  flex: 1;

  .palette-cel {
    flex: 1;
  }
}

.palette-cel {
  min-width: $size-palette-color-minimum;
  min-height: $size-palette-color-minimum;
  margin: 0;
  padding: 0;
  aspect-ratio: 1;
  touch-action: manipulation;

  &.active-cel {
    position: relative;

    &:after {
      @include layered-pseudo-element(0.1rem, 0.1rem, 0.1rem, 0.1rem);

      pointer-events: none;
      z-index: 1;
    }

    &.light-color:after {
      @include box-corners($color-palette-active-light, 0.2rem);
    }

    &.dark-color:after {
      @include box-corners($color-palette-active-dark, 0.2rem);
    }
  }

  &.out-of-gamut {
    position: relative;

    &.light-color {
      color: $color-palette-active-light;
    }

    &.dark-color {
      color: $color-palette-active-dark;
    }

    &:before {
      content: "!";
      position: absolute;
      top: 0.4rem;
      bottom: 0.4rem;
      left: 0.4rem;
      right: 0.4rem;
      pointer-events: none;

      font-weight: $font-weight-heading;
    }

    &.really-out-of-gamut:before {
      content: "!!";
    }
  }
}
