@use "./_constants.scss" as *;
@use "./_mixins.scss" as *;

$size-palette-color-minimum: 2rem;

@mixin box-corners($color, $thickness) {
  background-position:
    calc(-1 * $thickness) 0,
    0 calc(-1 * $thickness),
    calc(100% + $thickness) 0,
    0 calc(100% + $thickness);
  background-size:
    calc($thickness * 2) 100%,
    100% calc($thickness * 2),
    calc($thickness * 2) 100%,
    100% calc($thickness * 2);
  background-repeat: no-repeat;

  background-image: linear-gradient(0deg, $color, $color 25%, transparent 25%, transparent 75%, $color 75%),
    linear-gradient(90deg, $color, $color 25%, transparent 25%, transparent 75%, $color 75%),
    linear-gradient(0deg, $color, $color 25%, transparent 25%, transparent 75%, $color 75%),
    linear-gradient(90deg, $color, $color 25%, transparent 25%, transparent 75%, $color 75%);
}

.palette {
  display: flex;
  flex-direction: column;
  flex: 1 1 0;
  margin: -0.4rem;
  overflow: hidden;

  .palette-scroll {
    min-width: (
      ($size-palette-color-minimum * 16) + $size-widget-outline * 2 + $size-scrollbar-recess +
        $size-scrollbar-recess-spacing
    );
    display: flex;
    flex-direction: column;
    overflow-x: visible;
    overflow-y: hidden;
    position: relative;
    padding: 0.5rem;
    outline: none;

    &:after {
      $right-offset: 0.4rem + ($size-scrollbar-recess + $size-scrollbar-recess-spacing);

      @include layered-pseudo-element(0.4rem, $right-offset, 0.4rem, 0.4rem);
      pointer-events: none;

      border: $size-widget-outline solid $color-section-border;
      border-radius: $size-button-radius;
      outline: $color-section-gray $size-button-radius solid;
    }

    &:focus-visible:before {
      @include layered-pseudo-element(0.4rem, 0.4rem, 0.4rem, 0.4rem);
      pointer-events: none;
      z-index: 2;

      border-radius: $size-button-radius;
      outline: $color-widget-accent 0.2rem solid;
      outline-offset: 0.1rem;
    }

    .palette-row {
      padding-right: ($size-scrollbar-recess + $size-scrollbar-recess-spacing);
      display: flex;
      flex-direction: row;
      flex: 1;

      .palette-cel {
        min-width: $size-palette-color-minimum;
        min-height: $size-palette-color-minimum;
        margin: 0;
        padding: 0;
        flex: 1;
        aspect-ratio: 1;

        &.active-cel {
          position: relative;

          &:after {
            @include layered-pseudo-element(0.1rem, 0.1rem, 0.1rem, 0.1rem);

            pointer-events: none;
            z-index: 1;
          }

          &.light-color:after {
            @include box-corners($color-palette-active-light, 0.2rem);
          }

          &.dark-color:after {
            @include box-corners($color-palette-active-dark, 0.2rem);
          }
        }

        &.out-of-gamut {
          position: relative;

          &.light-color {
            color: $color-palette-active-light;
          }

          &.dark-color {
            color: $color-palette-active-dark;
          }

          &:before {
            content: "!";
            position: absolute;
            top: 0.4rem;
            bottom: 0.4rem;
            left: 0.4rem;
            right: 0.4rem;
            pointer-events: none;

            font-weight: $font-weight-heading;
          }
        }
      }
    }

    @include scrollbar-with-recess();
  }
}
