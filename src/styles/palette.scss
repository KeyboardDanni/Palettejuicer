@use "./_constants.scss" as *;
@use "./_mixins.scss" as *;
@use "sass:color";

$size-ruler-width: 2.2rem;
$size-ruler-margin: 0.4rem;
$size-palette-margin: 0.3rem;
$size-scrollbar-offset: $size-palette-margin + $size-scrollbar-recess + $size-scrollbar-recess-spacing -
  $size-widget-outline;
$color-ruler-tick: color.mix($color-section-gray-border, $color-section-gray, 50%);

@mixin box-corners($color, $thickness) {
  background-position:
    calc(-1 * $thickness) 0,
    0 calc(-1 * $thickness),
    calc(100% + $thickness) 0,
    0 calc(100% + $thickness);
  background-size:
    calc($thickness * 2) 100%,
    100% calc($thickness * 2),
    calc($thickness * 2) 100%,
    100% calc($thickness * 2);
  background-repeat: no-repeat;

  background-image: linear-gradient(0deg, $color, $color 25%, transparent 25%, transparent 75%, $color 75%),
    linear-gradient(90deg, $color, $color 25%, transparent 25%, transparent 75%, $color 75%),
    linear-gradient(0deg, $color, $color 25%, transparent 25%, transparent 75%, $color 75%),
    linear-gradient(90deg, $color, $color 25%, transparent 25%, transparent 75%, $color 75%);
}

input[type="text"].palette-rename {
  font-size: 1.8rem;
  max-width: 32rem;
  width: 100%;
}

.palette-header {
  display: flex;
  flex-direction: row;
  margin-bottom: calc($size-section-padding / 2);

  button {
    margin: 0.1rem 0.4rem;
    vertical-align: top;
  }
}

.palette-ruler-corner {
  width: $size-ruler-width;
  height: $size-ruler-width;
}

.palette-ruler-row {
  display: flex;
  flex-direction: row;
  height: $size-ruler-width;
  margin-left: $size-ruler-margin;
  margin-right: $size-scrollbar-offset + $size-widget-outline;

  background-color: $color-section-gray;
  overflow: hidden;
}

.palette-ruler-column {
  display: flex;
  flex-direction: column;
  width: $size-ruler-width;
  margin-top: $size-ruler-margin;
  margin-bottom: $size-scrollbar-offset + $size-widget-outline;

  background-color: $color-section-gray;
  overflow: hidden;
}

.palette-ruler-cel {
  color: $color-text-gray;
  font-size: 1.3rem;
  text-align: center;
  align-self: stretch;
  align-content: center;
  border-radius: 0.3rem;

  &.palette-ruler-active {
    color: $color-text-selected;
    background-color: $color-section-gray-selected;
    font-weight: bold;
  }

  &.palette-ruler-cursor {
    outline: solid 0.2rem $color-section-gray-selected;
    outline-offset: -0.2rem;
    font-weight: bold;
  }
}

.palette-ruler-row-cel {
  width: var(--palette-cel-size);
  flex: 0 0 auto;
  position: relative;

  &:not(.palette-ruler-active):not(.palette-ruler-cursor):after {
    @include layered-pseudo-element(0.6rem, 0, 0.3rem, 0);

    border-left: 0.05rem solid $color-ruler-tick;
    border-right: 0.05rem solid $color-ruler-tick;
  }
}

.palette-ruler-column-cel {
  height: var(--palette-cel-size);
  flex: 0 0 auto;
  position: relative;

  &:not(.palette-ruler-active):not(.palette-ruler-cursor):after {
    @include layered-pseudo-element(0, 0.3rem, 0, 0.6rem);

    border-top: 0.05rem solid $color-ruler-tick;
    border-bottom: 0.05rem solid $color-ruler-tick;
  }
}

.palette {
  display: grid;
  grid-template-columns: minmax(0, 1fr);
  grid-template-rows: minmax(0, 1fr);
  align-content: start;
  flex: 1 1 0;
  margin: -0.4rem;
  overflow: hidden;
  --palette-cel-size: 6rem;

  @media (max-width: $size-portrait-max) and (max-height: $size-portrait-scroll-min) {
    flex: 1;
  }

  &.palette-ruler-active {
    grid-template-columns: auto minmax(0, 1fr);
    grid-template-rows: auto minmax(0, 1fr);
  }

  .palette-scroll {
    display: flex;
    flex-direction: row;
    overflow: hidden;
    position: relative;
    padding: $size-palette-margin + $size-widget-outline;
    outline: none;
    max-width: fit-content;
    max-height: 100%;

    // Border overlay
    &:after {
      @include layered-pseudo-element(
        $size-palette-margin,
        $size-scrollbar-offset,
        $size-scrollbar-offset,
        $size-palette-margin
      );
      pointer-events: none;

      border: $size-widget-outline solid $color-section-border;
      border-radius: $size-button-radius;
      outline: $color-section-gray ($size-button-radius * 0.8 - $size-widget-outline) solid;
    }

    // Focus rectangle overlay
    &:focus-visible:before {
      @include layered-pseudo-element(
        $size-palette-margin,
        $size-palette-margin,
        $size-palette-margin,
        $size-palette-margin
      );
      pointer-events: none;
      z-index: 2;

      border-radius: $size-button-radius;
      outline: $color-widget-accent 0.2rem solid;
      outline-offset: 0.1rem;
    }
  }

  &.cel-picker-active {
    cursor: crosshair;
  }
}

.palette-row {
  display: flex;
  flex-direction: row;
}

.palette-cel {
  width: var(--palette-cel-size);
  height: var(--palette-cel-size);
  margin: 0;
  padding: 0;
  flex: 0 0 auto;
  touch-action: manipulation;

  &.active-cel {
    position: relative;

    &:after {
      @include layered-pseudo-element(0.1rem, 0.1rem, 0.1rem, 0.1rem);

      pointer-events: none;
      z-index: 1;
    }

    &.light-color:after {
      @include box-corners($color-palette-active-light, 0.2rem);
    }

    &.dark-color:after {
      @include box-corners($color-palette-active-dark, 0.2rem);
    }
  }

  &.cursor-cel {
    &.light-color {
      outline: $color-palette-active-light dashed 0.1rem;
      outline-offset: -0.4rem;
    }

    &.dark-color {
      outline: $color-palette-active-dark dashed 0.1rem;
      outline-offset: -0.4rem;
    }
  }

  &.out-of-gamut {
    position: relative;

    &.light-color {
      color: $color-palette-active-light;
    }

    &.dark-color {
      color: $color-palette-active-dark;
    }

    &:before {
      content: "!";
      position: absolute;
      top: 0.4rem;
      bottom: 0.4rem;
      left: 0.4rem;
      right: 0.4rem;
      pointer-events: none;

      font-weight: $font-weight-heading;
    }

    &.really-out-of-gamut:before {
      content: "!!";
    }
  }
}

.palette-toolbar {
  display: inline-flex;
  flex-direction: row;
  gap: 0.2rem;

  button {
    width: 3.2rem;
    margin-left: 0;
    margin-right: 0;
    padding-left: 0.3rem;
    padding-right: 0.3rem;
  }
}

.palette-menu {
  display: flex;
  flex-direction: column;
  gap: 0.4rem;
  align-items: center;
}

.palette-resizer-outside {
  display: grid;
  align-items: stretch;
  justify-items: stretch;
  grid-template-rows: 1fr 4fr 1fr;
  grid-template-columns: 1fr 4fr 1fr;

  .palette-resizer-updown {
    grid-column: 1 / span 3;
    text-align: center;
    align-content: center;

    button {
      width: 5rem;
    }
  }

  .palette-resizer-leftright {
    text-align: center;
    align-content: center;

    button {
      height: 5rem;
    }
  }

  .palette-resizer-inside {
    display: grid;
    align-items: stretch;
    justify-items: stretch;
    grid-template-rows: 1fr 2fr 1fr;
    grid-template-columns: 1fr 2fr 1fr;
    background-color: $color-widget-group;
    border: 0.1rem solid $color-widget-group-border;
    border-radius: $size-button-radius;

    .palette-resizer-inside-label {
      width: 8rem;
      height: 8rem;
      text-align: center;
      align-content: center;
    }
  }

  button {
    padding: 0.2rem;
    margin: 0.2rem 0.2rem 0.4rem 0.2rem;
    width: 3rem;
    height: 3rem;
  }
}

.palette-export-range {
  display: flex;
  flex-direction: row;
  gap: 0.8rem;
  align-items: baseline;
  padding: 0.4rem;
  background-color: $color-widget-group;
  border: 0.1rem solid $color-widget-group-border;
  border-radius: $size-button-radius;
}
